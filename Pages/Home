import React, { useState, useEffect } from "react";
import { base44 } from "@/api/base44Client";
import { useQuery, useMutation, useQueryClient } from "@tanstack/react-query";
import { Button } from "@/components/ui/button";
import { Card } from "@/components/ui/card";
import { Tabs, TabsList, TabsTrigger } from "@/components/ui/tabs";
import { 
  Calendar, Heart, Moon, MessageSquare, 
  Plus, Users, Sparkles, X
} from "lucide-react";
import { useNavigate } from "react-router-dom";
import { createPageUrl } from "@/utils";
import CommunityPost from "../components/community/CommunityPost";
import NewPostModal from "../components/community/NewPostModal";
import FindSoulModal from "../components/matching/FindSoulModal";
import AvatarDisplay from "../components/profile/AvatarDisplay";
import {
  Dialog,
  DialogContent,
} from "@/components/ui/dialog";

export default function Home() {
  const [showNewPost, setShowNewPost] = useState(false);
  const [showFindSoul, setShowFindSoul] = useState(false);
  const [showWelcome, setShowWelcome] = useState(false);
  const [activeCategory, setActiveCategory] = useState("all");
  const queryClient = useQueryClient();
  const navigate = useNavigate();

  const { data: user } = useQuery({
    queryKey: ['currentUser'],
    queryFn: () => base44.auth.me(),
  });

  const { data: posts, isLoading: postsLoading } = useQuery({
    queryKey: ['communityPosts'],
    queryFn: () => base44.entities.CommunityPost.list("-created_date"),
    initialData: [],
  });

  const updateUserMutation = useMutation({
    mutationFn: (userData) => base44.auth.updateMe(userData),
    onSuccess: () => {
      queryClient.invalidateQueries({ queryKey: ['currentUser'] });
    },
  });

  const createPostMutation = useMutation({
    mutationFn: (postData) => base44.entities.CommunityPost.create(postData),
    onSuccess: async () => {
      queryClient.invalidateQueries({ queryKey: ['communityPosts'] });
      
      const currentCount = user?.support_given || 0;
      await base44.auth.updateMe({ support_given: currentCount + 1 });
      queryClient.invalidateQueries({ queryKey: ['currentUser'] });
      
      setShowNewPost(false);
    },
  });

  // Check if first time user and show welcome
  useEffect(() => {
    if (user?.is_first_time) {
      setShowWelcome(true);
    }
  }, [user]);

  const handleCloseWelcome = async () => {
    setShowWelcome(false);
    await updateUserMutation.mutateAsync({ 
      is_first_time: false,
      days_active: 1 
    });
  };

  const handleCreatePost = async (postData) => {
    await createPostMutation.mutateAsync(postData);
  };

  const filteredPosts = activeCategory === "all" 
    ? posts 
    : posts.filter(post => post.category === activeCategory);

  const daysActive = user?.days_active || 0;
  const reflectionsCount = user?.reflections_count || 0;
  const supportGiven = user?.support_given || 0;

  return (
    <div className="min-h-screen p-3 sm:p-4 pt-4 sm:pt-6">
      <div className="max-w-lg mx-auto space-y-3 sm:space-y-4">
        {/* Header */}
        <div className="flex items-center justify-between">
          <div>
            <h1 className="text-xl sm:text-2xl font-bold text-gray-900">
              {user?.is_first_time ? 'Welcome to BareSouls! üå∏' : `Welcome back, ${user?.full_name?.split(' ')[0] || 'friend'} üå∏`}
            </h1>
            <p className="text-xs sm:text-sm text-gray-600 mt-1">Your safe space to connect</p>
          </div>
          <AvatarDisplay user={user} size="medium" />
        </div>

        {/* Quick Stats */}
        <Card className="glass-card rounded-3xl p-3 sm:p-4">
          <div className="grid grid-cols-3 gap-2 sm:gap-3">
            <div className="text-center">
              <div className="w-8 h-8 sm:w-10 sm:h-10 mx-auto rounded-full bg-gradient-to-br from-yellow-400 to-orange-400 flex items-center justify-center mb-1">
                <Calendar className="w-4 h-4 sm:w-5 sm:h-5 text-white" />
              </div>
              <div className="text-lg sm:text-xl font-bold text-gray-900">{daysActive}</div>
              <p className="text-[10px] sm:text-xs text-gray-600">Days</p>
            </div>
            
            <div className="text-center">
              <div className="w-8 h-8 sm:w-10 sm:h-10 mx-auto rounded-full bg-gradient-to-br from-blue-400 to-purple-500 flex items-center justify-center mb-1">
                <Heart className="w-4 h-4 sm:w-5 sm:h-5 text-white" />
              </div>
              <div className="text-lg sm:text-xl font-bold text-gray-900">{supportGiven}</div>
              <p className="text-[10px] sm:text-xs text-gray-600">Support</p>
            </div>
            
            <div className="text-center">
              <div className="w-8 h-8 sm:w-10 sm:h-10 mx-auto rounded-full bg-gradient-to-br from-teal-400 to-green-400 flex items-center justify-center mb-1">
                <Moon className="w-4 h-4 sm:w-5 sm:h-5 text-white" />
              </div>
              <div className="text-lg sm:text-xl font-bold text-gray-900">{reflectionsCount}</div>
              <p className="text-[10px] sm:text-xs text-gray-600">Entries</p>
            </div>
          </div>
        </Card>

        {/* Find a Soul - Featured */}
        <Card className="glass-card rounded-3xl overflow-hidden border-2 border-purple-200/50">
          <div className="p-4 sm:p-6 space-y-3 sm:space-y-4">
            <div className="flex items-center gap-3">
              <div className="w-10 h-10 sm:w-12 sm:h-12 rounded-full bg-gradient-to-br from-purple-500 to-pink-500 flex items-center justify-center animate-pulse-glow">
                <Users className="w-5 h-5 sm:w-6 sm:h-6 text-white" />
              </div>
              <div>
                <h3 className="font-semibold text-gray-900 text-sm sm:text-base">Find a Soul</h3>
                <p className="text-xs sm:text-sm text-gray-600">Connect with someone who understands</p>
              </div>
            </div>
            
            <button 
              onClick={() => setShowFindSoul(true)}
              className="w-full bg-gradient-to-r from-purple-500 via-pink-500 to-purple-500 text-white font-semibold py-3 sm:py-4 rounded-2xl hover:shadow-lg transition-all duration-300 hover:scale-[1.02] flex items-center justify-center gap-2 text-sm sm:text-base"
            >
              <Sparkles className="w-4 h-4 sm:w-5 sm:h-5" />
              Find Someone to Talk To
            </button>
            
            <p className="text-[10px] sm:text-xs text-center text-gray-500">
              8-minute anonymous chat ‚Ä¢ Add as friend to keep chatting
            </p>
          </div>
        </Card>

        {/* Quick Actions */}
        <div className="grid grid-cols-2 gap-2 sm:gap-3">
          <button 
            onClick={() => navigate(createPageUrl("Chat"))}
            className="glass-card rounded-3xl p-3 sm:p-4 hover:scale-105 transition-transform duration-300"
          >
            <div className="text-center space-y-1 sm:space-y-2">
              <div className="w-10 h-10 sm:w-12 sm:h-12 mx-auto rounded-full bg-gradient-to-br from-purple-400 to-pink-400 flex items-center justify-center">
                <MessageSquare className="w-5 h-5 sm:w-6 sm:h-6 text-white" />
              </div>
              <h3 className="font-semibold text-gray-900 text-xs sm:text-sm">AI Chat</h3>
            </div>
          </button>
          
          <button 
            onClick={() => navigate(createPageUrl("Reflect"))}
            className="glass-card rounded-3xl p-3 sm:p-4 hover:scale-105 transition-transform duration-300"
          >
            <div className="text-center space-y-1 sm:space-y-2">
              <div className="w-10 h-10 sm:w-12 sm:h-12 mx-auto rounded-full bg-gradient-to-br from-blue-400 to-cyan-400 flex items-center justify-center">
                <Moon className="w-5 h-5 sm:w-6 sm:h-6 text-white" />
              </div>
              <h3 className="font-semibold text-gray-900 text-xs sm:text-sm">Reflect</h3>
            </div>
          </button>
        </div>

        {/* Community Feed Section */}
        <div className="pt-2">
          <div className="flex items-center justify-between mb-3 sm:mb-4">
            <h2 className="text-lg sm:text-xl font-bold text-gray-900 flex items-center gap-2">
              <Heart className="w-4 h-4 sm:w-5 sm:h-5 text-pink-500" />
              Community Feed
            </h2>
            <Button
              onClick={() => setShowNewPost(true)}
              size="sm"
              className="bg-gradient-to-r from-teal-500 to-blue-500 text-white rounded-full text-xs sm:text-sm h-8 sm:h-9"
            >
              <Plus className="w-3 h-3 sm:w-4 sm:h-4 mr-1" />
              Share
            </Button>
          </div>

          {/* Category Filter */}
          <Card className="glass-card rounded-3xl p-2 sm:p-3 mb-3 sm:mb-4">
            <Tabs value={activeCategory} onValueChange={setActiveCategory}>
              <TabsList className="w-full grid grid-cols-3 bg-white/30 h-8 sm:h-9">
                <TabsTrigger value="all" className="rounded-xl text-[10px] sm:text-xs">All</TabsTrigger>
                <TabsTrigger value="encouragement" className="rounded-xl text-[10px] sm:text-xs">üí™ Support</TabsTrigger>
                <TabsTrigger value="gratitude" className="rounded-xl text-[10px] sm:text-xs">üôè Thanks</TabsTrigger>
              </TabsList>
            </Tabs>
            <div className="mt-2 grid grid-cols-3 gap-1 sm:gap-2">
              <Button
                variant={activeCategory === "hope" ? "default" : "ghost"}
                onClick={() => setActiveCategory("hope")}
                className="text-[10px] sm:text-xs rounded-xl h-7 sm:h-8 px-2"
              >
                ‚ú® Hope
              </Button>
              <Button
                variant={activeCategory === "vent" ? "default" : "ghost"}
                onClick={() => setActiveCategory("vent")}
                className="text-[10px] sm:text-xs rounded-xl h-7 sm:h-8 px-2"
              >
                üí≠ Vent
              </Button>
              <Button
                variant={activeCategory === "milestone" ? "default" : "ghost"}
                onClick={() => setActiveCategory("milestone")}
                className="text-[10px] sm:text-xs rounded-xl h-7 sm:h-8 px-2"
              >
                üéâ Win
              </Button>
            </div>
          </Card>

          {/* Community Posts */}
          <div className="space-y-2 sm:space-y-3">
            {postsLoading ? (
              <div className="text-center py-8 sm:py-12">
                <div className="w-10 h-10 sm:w-12 sm:h-12 mx-auto rounded-full border-4 border-purple-500 border-t-transparent animate-spin"></div>
                <p className="text-gray-600 mt-4 text-sm sm:text-base">Loading community...</p>
              </div>
            ) : filteredPosts.length === 0 ? (
              <Card className="glass-card rounded-3xl p-6 sm:p-8 text-center">
                <div className="text-4xl sm:text-6xl mb-3 sm:mb-4">üå∏</div>
                <h3 className="text-lg sm:text-xl font-semibold text-gray-900 mb-2">
                  No posts yet
                </h3>
                <p className="text-sm sm:text-base text-gray-600 mb-3 sm:mb-4">
                  Be the first to share in this category!
                </p>
                <Button
                  onClick={() => setShowNewPost(true)}
                  className="bg-gradient-to-r from-purple-500 to-pink-500 text-white rounded-2xl text-sm sm:text-base"
                >
                  <Plus className="w-4 h-4 mr-2" />
                  Share Your Thoughts
                </Button>
              </Card>
            ) : (
              filteredPosts.map((post) => (
                <CommunityPost key={post.id} post={post} />
              ))
            )}
          </div>
        </div>
      </div>

      {/* Welcome Dialog for First Time Users */}
      <Dialog open={showWelcome} onOpenChange={setShowWelcome}>
        <DialogContent className="glass-card border-2 border-white/30 max-w-md mx-4 sm:mx-auto">
          <button
            onClick={handleCloseWelcome}
            className="absolute right-4 top-4 text-gray-500 hover:text-gray-700"
          >
            <X className="w-5 h-5" />
          </button>
          
          <div className="text-center space-y-4 sm:space-y-6 py-4 sm:py-6">
            <div className="w-20 h-20 sm:w-24 sm:h-24 mx-auto rounded-full bg-gradient-to-br from-purple-400 to-pink-400 flex items-center justify-center animate-float">
              <Sparkles className="w-10 h-10 sm:w-12 sm:h-12 text-white" />
            </div>
            
            <div>
              <h2 className="text-2xl sm:text-3xl font-bold text-gray-900 mb-2 sm:mb-3">
                Welcome to BareSouls! üå∏
              </h2>
              <p className="text-sm sm:text-base text-gray-700 leading-relaxed">
                Your safe space for emotional wellness. Here you can reflect on your feelings, 
                connect with Luna (your AI companion), share anonymously with the community, 
                and find soul matches for meaningful conversations.
              </p>
            </div>

            <div className="bg-purple-50/50 rounded-2xl p-3 sm:p-4 border border-purple-200/50 text-left space-y-2">
              <p className="text-xs sm:text-sm text-gray-700">
                <strong>üè† Home:</strong> Community feed & quick actions
              </p>
              <p className="text-xs sm:text-sm text-gray-700">
                <strong>üí¨ Chat:</strong> Talk to Luna or your soul friends
              </p>
              <p className="text-xs sm:text-sm text-gray-700">
                <strong>üåô Reflect:</strong> Track your emotional journey
              </p>
              <p className="text-xs sm:text-sm text-gray-700">
                <strong>üë• Find a Soul:</strong> 8-min anonymous chats
              </p>
            </div>

            <Button
              onClick={handleCloseWelcome}
              className="w-full bg-gradient-to-r from-purple-500 to-pink-500 text-white py-5 sm:py-6 rounded-2xl text-base sm:text-lg font-semibold"
            >
              Let's Begin üíú
            </Button>
          </div>
        </DialogContent>
      </Dialog>

      <NewPostModal
        isOpen={showNewPost}
        onClose={() => setShowNewPost(false)}
        onSave={handleCreatePost}
      />

      <FindSoulModal
        isOpen={showFindSoul}
        onClose={() => setShowFindSoul(false)}
      />
    </div>
  );
}