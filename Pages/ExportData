import React, { useState } from "react";
import { base44 } from "@/api/base44Client";
import { useQuery } from "@tanstack/react-query";
import { Button } from "@/components/ui/button";
import { Card } from "@/components/ui/card";
import { ArrowLeft, Download, FileText, MessageSquare, Heart } from "lucide-react";
import { useNavigate } from "react-router-dom";
import { createPageUrl } from "@/utils";

export default function ExportData() {
  const navigate = useNavigate();
  const [exporting, setExporting] = useState(false);

  const { data: user } = useQuery({
    queryKey: ['currentUser'],
    queryFn: () => base44.auth.me(),
  });

  const { data: moodEntries } = useQuery({
    queryKey: ['moodEntries'],
    queryFn: () => base44.entities.MoodEntry.list(),
    initialData: [],
  });

  const { data: chatMessages } = useQuery({
    queryKey: ['chatMessages'],
    queryFn: () => base44.entities.ChatMessage.list(),
    initialData: [],
  });

  const { data: communityPosts } = useQuery({
    queryKey: ['communityPosts'],
    queryFn: () => base44.entities.CommunityPost.filter({ created_by: user?.email }),
    initialData: [],
    enabled: !!user,
  });

  const handleExport = async (type) => {
    setExporting(true);

    try {
      let data = [];
      let filename = '';

      if (type === 'reflections') {
        data = moodEntries;
        filename = 'baresouls-reflections.json';
      } else if (type === 'messages') {
        data = chatMessages.filter(m => m.sender === 'user');
        filename = 'baresouls-messages.json';
      } else if (type === 'posts') {
        data = communityPosts;
        filename = 'baresouls-posts.json';
      } else if (type === 'all') {
        data = {
          user: user,
          reflections: moodEntries,
          messages: chatMessages.filter(m => m.sender === 'user'),
          community_posts: communityPosts,
          exported_at: new Date().toISOString()
        };
        filename = 'baresouls-full-export.json';
      }

      const blob = new Blob([JSON.stringify(data, null, 2)], { type: 'application/json' });
      const url = URL.createObjectURL(blob);
      const link = document.createElement('a');
      link.href = url;
      link.download = filename;
      link.click();
      URL.revokeObjectURL(url);
    } catch (error) {
      alert('Failed to export data. Please try again.');
    } finally {
      setExporting(false);
    }
  };

  return (
    <div className="min-h-screen p-6 pt-8">
      <div className="max-w-lg mx-auto space-y-6">
        {/* Header */}
        <div className="flex items-center gap-4">
          <Button
            variant="ghost"
            size="icon"
            onClick={() => navigate(createPageUrl("Profile"))}
            className="rounded-full"
          >
            <ArrowLeft className="w-5 h-5" />
          </Button>
          <div>
            <h1 className="text-2xl font-bold text-gray-900">
              Export Data
            </h1>
            <p className="text-sm text-gray-600">Download your personal data</p>
          </div>
        </div>

        {/* Export Options */}
        <div className="space-y-4">
          <Card className="glass-card rounded-3xl p-5">
            <div className="flex items-center justify-between mb-4">
              <div className="flex items-center gap-3">
                <div className="w-12 h-12 rounded-xl bg-purple-100 flex items-center justify-center">
                  <FileText className="w-6 h-6 text-purple-600" />
                </div>
                <div>
                  <h3 className="font-semibold text-gray-900">Reflections</h3>
                  <p className="text-sm text-gray-600">{moodEntries.length} entries</p>
                </div>
              </div>
              <Button
                onClick={() => handleExport('reflections')}
                disabled={exporting}
                className="bg-gradient-to-r from-purple-500 to-pink-500 text-white rounded-2xl"
              >
                <Download className="w-4 h-4 mr-2" />
                Export
              </Button>
            </div>
          </Card>

          <Card className="glass-card rounded-3xl p-5">
            <div className="flex items-center justify-between mb-4">
              <div className="flex items-center gap-3">
                <div className="w-12 h-12 rounded-xl bg-blue-100 flex items-center justify-center">
                  <MessageSquare className="w-6 h-6 text-blue-600" />
                </div>
                <div>
                  <h3 className="font-semibold text-gray-900">Chat Messages</h3>
                  <p className="text-sm text-gray-600">
                    {chatMessages.filter(m => m.sender === 'user').length} messages
                  </p>
                </div>
              </div>
              <Button
                onClick={() => handleExport('messages')}
                disabled={exporting}
                className="bg-gradient-to-r from-blue-500 to-cyan-500 text-white rounded-2xl"
              >
                <Download className="w-4 h-4 mr-2" />
                Export
              </Button>
            </div>
          </Card>

          <Card className="glass-card rounded-3xl p-5">
            <div className="flex items-center justify-between mb-4">
              <div className="flex items-center gap-3">
                <div className="w-12 h-12 rounded-xl bg-pink-100 flex items-center justify-center">
                  <Heart className="w-6 h-6 text-pink-600" />
                </div>
                <div>
                  <h3 className="font-semibold text-gray-900">Community Posts</h3>
                  <p className="text-sm text-gray-600">{communityPosts.length} posts</p>
                </div>
              </div>
              <Button
                onClick={() => handleExport('posts')}
                disabled={exporting}
                className="bg-gradient-to-r from-pink-500 to-rose-500 text-white rounded-2xl"
              >
                <Download className="w-4 h-4 mr-2" />
                Export
              </Button>
            </div>
          </Card>
        </div>

        {/* Full Export */}
        <Card className="glass-card rounded-3xl p-6 border-2 border-purple-200/50">
          <div className="text-center space-y-4">
            <div className="w-16 h-16 mx-auto rounded-full bg-gradient-to-br from-purple-500 to-pink-500 flex items-center justify-center">
              <Download className="w-8 h-8 text-white" />
            </div>
            <div>
              <h3 className="text-xl font-semibold text-gray-900 mb-2">
                Export Everything
              </h3>
              <p className="text-gray-600">
                Download all your data in one file
              </p>
            </div>
            <Button
              onClick={() => handleExport('all')}
              disabled={exporting}
              className="w-full bg-gradient-to-r from-purple-500 via-pink-500 to-purple-500 text-white py-6 rounded-2xl text-lg font-semibold"
            >
              {exporting ? 'Exporting...' : 'Export All Data'}
            </Button>
          </div>
        </Card>

        {/* Info */}
        <Card className="glass-card rounded-3xl p-5">
          <p className="text-sm text-gray-700 leading-relaxed">
            ðŸ“¥ Your data will be downloaded as JSON files that you can save, backup, 
            or import into other applications. All exports include timestamps and metadata.
          </p>
        </Card>
      </div>
    </div>
  );
}